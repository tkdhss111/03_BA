matpoints(x, yhat, pch = 1,  cex = 2, col = "black")
segments(x, y, x, yhat, col = "blue")
text(2, 2, TeX("$\\sum e^2=$"))
text(1, 10, paste(TeX("$\\sum e^2=$"), ss)
for (i.g in dev.list()) dev.off(i.g)
}
draw.lsline(a =  2, b = 1/3, main = "Line No.1", file = "line01.png")
draw.lsline(a = -1, b = 2/2, main = "Line No.2", file = "line02.png")
draw.lsline(a =  1, b = 1/2, main = "Line No.3", file = "line03.png")
draw.lsline(a =  0, b = 2/2, main = "Line No.4", file = "line04.png")
draw.lsline(a =  10, b = -2/2, main = "Line No.5", file = "line05.png")
text(1, 10, paste(TeX("$\\sum e^2=$"), ss))
matplot(x, y, type = "n",
main = main, xlab = "Variable 1",
ylab = "Variable 2")
abline(h = seq(-30, 30, 1),
v = seq(-30, 30, 1),
col = gray(0.9), lty = 2)
abline(a = a, b = b, lwd = 2, col = rgb(1, 0, 0, 0.25))
matpoints(x, y,    pch = 16, cex = 1, col = "blue")
matpoints(x, yhat, pch = 1,  cex = 2, col = "black")
segments(x, y, x, yhat, col = "blue")
text(1, 10, paste(TeX("$\\sum e^2=$"), ss))
text(1, 10, c(TeX("$\\sum e^2=$"), ss))
text(1, 10, TeX("$\\sum e^2=$")
text(2, 10, ss)
for (i.g in dev.list()) dev.off(i.g)
}
draw.lsline(a =  2, b = 1/3, main = "Line No.1", file = "line01.png")
draw.lsline(a = -1, b = 2/2, main = "Line No.2", file = "line02.png")
draw.lsline(a =  1, b = 1/2, main = "Line No.3", file = "line03.png")
draw.lsline(a =  0, b = 2/2, main = "Line No.4", file = "line04.png")
draw.lsline(a =  10, b = -2/2, main = "Line No.5", file = "line05.png")
matplot(x, y, type = "n",
main = main, xlab = "Variable 1",
ylab = "Variable 2")
abline(h = seq(-30, 30, 1),
v = seq(-30, 30, 1),
col = gray(0.9), lty = 2)
abline(a = a, b = b, lwd = 2, col = rgb(1, 0, 0, 0.25))
matpoints(x, y,    pch = 16, cex = 1, col = "blue")
matpoints(x, yhat, pch = 1,  cex = 2, col = "black")
segments(x, y, x, yhat, col = "blue")
text(1, 10, TeX("$\\sum e^2=$")
text(2, 10, ss)
text(1, 10, TeX("$\\sum e^2=$"))
text(2, 10, ss)
text(1.5, 10, TeX("$\\sum e^2=$"))
text(2.5, 10, ss)
matplot(x, y, type = "n",
main = main, xlab = "Variable 1",
ylab = "Variable 2")
abline(h = seq(-30, 30, 1),
v = seq(-30, 30, 1),
col = gray(0.9), lty = 2)
abline(a = a, b = b, lwd = 2, col = rgb(1, 0, 0, 0.25))
matpoints(x, y,    pch = 16, cex = 1, col = "blue")
matpoints(x, yhat, pch = 1,  cex = 2, col = "black")
segments(x, y, x, yhat, col = "blue")
text(1.5, 10, TeX("$\\sum e^2=$"))
text(2.2, 10, ss)
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
?sprintf
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
?text
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
text(3.0, 9.5, sprintf("%2.2e", ss), pos = 1)
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R", echo=TRUE)
source("C:/Users/hss/AQUOS/Default_Folder/TIU/01_ds/20_open_campus/回帰分析入門/fig/least_squares.R")
source("C:/Users/hss/0_tkd/1_hss/TIU/01_ds/20_open_campus/03_回帰分析入門/fig/ice_cream.R", echo=TRUE)
source("C:/Users/hss/0_tkd/1_hss/TIU/01_ds/20_open_campus/03_回帰分析入門/fig/ice_cream.R", echo=TRUE)
summary(fit)
summary(fit)
summary(fit)
fit <- lm(yen ~ temp, data = ice)
summary(fit)
library("stargazer")
install.packages("stargazer")
library("stargazer")
stargazer(attitude)
fit1 <- lm(yen ~ temp, data = ice)
fit2 <- lm(yen ~ temp+I(temp^2), data = ice)
stargazer(fit1, fit2, title = "Regression Model Comparison")
sg <- stargazer(fit1, fit2, align = T, title = "Regression Model Comparison")
write(sg, file = "lm_comp.tex")
library(jtools)
install.packages("jtools")
summ(fit1)
library(jtools)
summ(fit1)
install.packages("kableExtra")
library(kableExtra)
summ(fit1)
library(jtools)
library(kableExtra)
summ(fit1)
effect_plot(fit1, pred = ice.new, interval = TRUE, plot.points = TRUE,
jitter = 0.05)
ice.new <- data.frame(temp = 5:30)
effect_plot(fit1, pred = ice.new, interval = TRUE, plot.points = TRUE,
jitter = 0.05)
effect_plot(fit1, pred = yen, interval = TRUE, plot.points = TRUE,
jitter = 0.05)
plot_coefs(fit1)
install.packages("ggstance")
plot_coefs(fit1)
effect_plot(fit1, interval = T, plot.points = T, jitter = 0.05)
effect_plot(fit1, interval = T, plot.points = T, jitter = 0.05)
effect_plot(fit1, pred = temp, interval = T, plot.points = T, jitter = 0.05)
effect_plot(fit1, pred = temp, interval = T, int.type = "prediction", plot.points = T, jitter = 0.05)
plot_coefs(fit1)
str(pred)
i.f <- 3
x <- 5:30
y <- ice$yen
if (i.f == 3) fit <- lm(yen ~ temp+I(temp^2), data = ice)
summary(fit)
pred <- predict(fit, newdata = data.frame(temp = x), interval = "prediction")
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
xp <- 5:30
x <- ice$temp
y <- ice$yen
if (i.f == 3) fit <- lm(yen ~ temp+I(temp^2), data = ice)
pred <- predict(fit, newdata = data.frame(temp = xp), interval = "prediction")
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = "blue", pch = 1)
matlines(xp, y = pred, col = "red", lty = c(1, 2, 2))
polygon(c(xp, rev(xp)), c(pred$lwr, rev(pred$upr)), col = gray(0.8))
pred
lwr <- pred[, 2]
upr <- pred[, 3]
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), col = gray(0.8))
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), col = rgb(0.2, 0.2, 0.2))
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), col = rgb(0.8, 0.8, 0.8))
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), border = F, col = rgb(0.8, 0.8, 0.8))
?rgb
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), border = F, col = rgb(0.8, 0.8, 0.8, 0.2))
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = "blue", pch = 1)
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), border = F, col = rgb(0.8, 0.8, 0.8, 0.2))
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), border = F, col = rgb(0.8, 0.8, 0.8, 0.3))
yhat <- pred[, 1]
matlines(xp, y = yhat, col = "red", lty = c(1, 2, 2))
matlines(xp, y = yhat, col = "red", lwd = 2, lty = c(1, 2, 2))
COL.PT <- rgb(0.8, 0.8, 0.8, 0.3)
COL.PI <- rgb(0.8, 0.8, 0.8, 0.3)
matpoints(x, y, col = COL.PT, pch = 2)
matpoints(x, y, col = COL.PT, pch = 3)
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = COL.PT, pch = 3)
COL.PT <- rgb(0.0, 0.2, 0.2, 0.3)
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = COL.PT, pch = 3)
matpoints(x, y, col = COL.PT, pch = 2)
COL.PT <- rgb(0.0, 0.0, 1.0, 0.3)
matpoints(x, y, col = COL.PT, pch = 16)
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = COL.PT, pch = 16)
matpoints(x, y, col = rgb(0.0, 0.0, 1.0, 0.5), pch = 16)
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = rgb(0.0, 0.0, 1.0, 0.5), pch = 16)
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = rgb(0.0, 0.0, 1.0, 0.4), pch = 16)
matlines(xp, y = yhat, col = "red", lwd = 2, lty = c(1, 2, 2))
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), border = F, col = rgb(0.8, 0.8, 0.8, 0.3))
legend("topleft", col = "red", lty = 1:2,
legend = c(TeX("$\\hat{y}$"), TeX("95\\% Prediction Interval")))
matlines(xp, y = pred, col = "red", lwd = 2, lty = c(1, 2, 2))
matplot(x, y, type = "n",
main = "Ice Cream Sales",
xlab = "Temperature [deg. C]",
ylab = "Sales [Yen]")
abline(v = seq(5, 30, 5), h = seq(400, 1400, 200), col = gray(0.8), lty = 2)
matpoints(x, y, col = rgb(0.0, 0.0, 1.0, 0.4), pch = 16)
if (i.f > 1)
{
matlines(xp, y = pred, col = "red", lwd = 2, lty = c(1, 2, 2))
polygon(c(xp, rev(xp)), c(lwr, rev(upr)), border = F, col = rgb(0.8, 0.8, 0.8, 0.2))
legend("topleft", col = "red", lty = c(1, NA),
legend = c(TeX("$\\hat{y}$"), TeX("95\\% Prediction Interval")))
}
legend("topleft", col = "red", lty = 1:2,
legend = c(TeX("$\\hat{y}$"), TeX("95\\% Prediction Interval")))
source("C:/Users/hss/0_tkd/1_hss/TIU/01_ds/20_open_campus/03_回帰分析入門/fig/ice_cream.R")
library(jtools)
library(kableExtra)
fit1 <- lm(yen ~ temp, data = ice)
fit2 <- lm(yen ~ temp+I(temp^2), data = ice)
summ(fit1)
summ(fit1, fit2)
summary(fit)
fit <- lm(yen ~ temp, data = ice)
summary(fit)
summ(fit1)
plot_coefs(fit1)
library(jtools)
library(kableExtra)
summ(fit1)
plot_coefs(fit1)
install.packages("broom.mixed")
plot_coefs(fit1)
fit1 <- lm(yen ~ 1 + temp, data = ice)
plot_coefs(fit1)
source("C:/Users/hss/0_tkd/1_hss/TIU/01_ds/20_open_campus/03_回帰分析入門/fig/ice_cream.R")
fit <- lm(yen ~ temp, data = ice)
summary(fit)
ice <- read.csv("ice_cream.csv")
fit <- lm(yen ~ temp, data = ice)
ice <- read.csv("ice_cream.csv")
fit <- lm(yen ~ temp, data = ice)
summary(fit)
plot(fit)
source("C:/Users/hss/0_tkd/1_hss/TIU/01_ds/03_BA/第01回ー相関分析/fig/scatter_plots.R")
f <- function(x) x
draw.scatter(f, "positive_correlation.pdf", "Positive Correlation")
f <- function(x) -x
draw.scatter(f, "negative_correlation.pdf", "Negative Correlation")
f <- function(x) 0.1*x^2 - 10
draw.scatter(f, "curvilinear_correlation.pdf", "Curvilinear Correlation")
f <- function(x) 1
draw.scatter(f, "no_correlation.pdf", "No Correlation")
f <- function(x) x^0
draw.scatter(f, "no_correlation.pdf", "No Correlation")
draw.scatter <- function(f, file, main)
{
#f <- function(x) 0.1*x^2 - 10
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 5)
y.true <- f(x)
y <- y.true + e
#fit <- lm(y ~ x, data = data.frame(x, y))
#yhat <- fit$fitted
cairo_pdf(file, width = 5, height = 5,
family = "UD Digi Kyokasho NP-R")
par(mar = c(4, 4, 2, 1) + 0.1)
matplot(x, y,
type = "n",
main = main,
xlab = "Variable 1",
ylab = "Variable 2",
xlim = c(-20, 20),
ylim = c(-20, 20))
abline(h = seq(-30, 30, 10),
v = seq(-30, 30, 5),
col = gray(0.8), lty = 2)
abline(h = 0, v = 0, col = gray(0.2))
matpoints(x, y, pch = 16, col = rgb(0, 0, 1, 0.25))
# True curve
matlines(x.s, f(x.s), col = "red")
for (i.g in dev.list()) dev.off(i.g)
}
x <- 1:10
y <- 1:10
f <- function(x) x
draw.scatter(f, "positive_correlation.pdf", "Positive Correlation")
f <- function(x) -x
draw.scatter(f, "negative_correlation.pdf", "Negative Correlation")
f <- function(x) 0.1*x^2 - 10
draw.scatter(f, "curvilinear_correlation.pdf", "Curvilinear Correlation")
f <- function(x) x^0
draw.scatter(f, "no_correlation.pdf", "No Correlation")
x <- 1:10
y <- 1:10
f <- function(x) 0.1*x^2 - 10
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 5)
y.true <- f(x)
y <- y.true + e
cor(x, y)
cor(x, y, method = "peason")
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
x <- rnorm(200, mean = 0, sd = 1)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 5)
y.true <- f(x)
y <- y.true + e
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 1)
y.true <- f(x)
y <- y.true + e
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 0.1)
y.true <- f(x)
y <- y.true + e
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 0.01)
y.true <- f(x)
y <- y.true + e
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 0.01)
y.true <- f(x)
y <- y.true + e
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 5)
y.true <- f(x)
y <- y.true + e
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
x <- rnorm(200, mean = 0, sd = 10)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 5)
y.true <- f(x)
y <- y.true + e
cor(x, y, method = "pearson")
cor(x, y, method = "spearman")
par(mar = c(4, 4, 2, 1) + 0.1)
matplot(x, y,
type = "n",
main = main,
xlab = "Variable 1",
ylab = "Variable 2",
xlim = c(-20, 20),
ylim = c(-20, 20))
abline(h = seq(-30, 30, 10),
v = seq(-30, 30, 5),
col = gray(0.8), lty = 2)
abline(h = 0, v = 0, col = gray(0.2))
matpoints(x, y, pch = 16, col = rgb(0, 0, 1, 0.25))
# True curve
matlines(x.s, f(x.s), col = "red")
r <- cor(x, y, method = "pearson")
rho <- ocor(x, y, method = "spearman")
r <- cor(x, y, method = "pearson")
rho <- cor(x, y, method = "spearman")
TeX(paste0("$\\rho=", rho, "$"))
legend("bottomleft",
legend = c(
TeX(paste0("$R = ", rho, "$")),
TeX(paste0("$\\rho = ", rho, "$")))
legend("bottomleft",
legend = c(
TeX(paste0("$R = ", rho, "$")),
TeX(paste0("$\\rho = ", rho, "$"))))
legend("bottomleft",
legend = c(
TeX(paste0("Pearson $R = ", rho, "$")),
TeX(paste0("Spearman $\\rho = ", rho, "$"))))
sprintf(r, "Pearson $R = %2.1f$")
legend("bottomleft",
legend = c(
TeX(sprintf(r, "Pearson $R = %2.1f$")),
TeX(paste0("Spearman $\\rho = ", rho, "$"))))
str(r)
sprintf(r, "Pearson $R = %2.1f$")
sprintf("Pearson $R = %2.1f$", r)
legend("bottomleft",
TeX(sprintf("Pearson $R = %2.1f$", r)),
legend("bottomleft",
legend = c(
TeX(sprintf("Pearson $R = %2.1f$", r)),
TeX(sprintf("Spearman $\\rho = %2.1f$", r))))
str(r)
legend("bottomleft",
legend = c(
TeX(sprintf("Pearson $R = %2.1f$", r)),
TeX(sprintf("Spearman $\\rho = %2.1f$", r))))
par(mar = c(4, 4, 2, 1) + 0.1)
matplot(x, y,
type = "n",
main = main,
xlab = "Variable 1",
ylab = "Variable 2",
xlim = c(-20, 20),
ylim = c(-20, 20))
abline(h = seq(-30, 30, 10),
v = seq(-30, 30, 5),
col = gray(0.8), lty = 2)
abline(h = 0, v = 0, col = gray(0.2))
matpoints(x, y, pch = 16, col = rgb(0, 0, 1, 0.25))
# True curve
matlines(x.s, f(x.s), col = "red")
legend("bottomleft",
legend = c(
TeX(sprintf("Pearson $R = %2.1f$", r)),
TeX(sprintf("Spearman $\\rho = %2.1f$", r))))
x <- rnorm(200, mean = 0, sd = 15)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 5)
y.true <- f(x)
y <- y.true + e
r <- cor(x, y, method = "pearson")
rho <- cor(x, y, method = "spearman")
par(mar = c(4, 4, 2, 1) + 0.1)
matplot(x, y,
type = "n",
main = main,
xlab = "Variable 1",
ylab = "Variable 2",
xlim = c(-20, 20),
ylim = c(-20, 20))
abline(h = seq(-30, 30, 10),
v = seq(-30, 30, 5),
col = gray(0.8), lty = 2)
abline(h = 0, v = 0, col = gray(0.2))
matpoints(x, y, pch = 16, col = rgb(0, 0, 1, 0.25))
# True curve
matlines(x.s, f(x.s), col = "red")
legend("bottomleft",
legend = c(
TeX(sprintf("Pearson $R = %2.1f$", r)),
TeX(sprintf("Spearman $\\rho = %2.1f$", r))))
x <- rnorm(200, mean = 0, sd = 15)
x.s <- -30:30
e <- rnorm(length(x), mean = 0, sd = 5)
y.true <- f(x)
y <- y.true + e
r <- cor(x, y, method = "pearson")
rho <- cor(x, y, method = "spearman")
cairo_pdf("pitfall_correlation.pdf", width = 5, height = 5,
family = "UD Digi Kyokasho NP-R")
par(mar = c(4, 4, 2, 1) + 0.1)
matplot(x, y,
type = "n",
main = main,
xlab = "Variable 1",
ylab = "Variable 2",
xlim = c(-20, 20),
ylim = c(-20, 20))
abline(h = seq(-30, 30, 10),
v = seq(-30, 30, 5),
col = gray(0.8), lty = 2)
abline(h = 0, v = 0, col = gray(0.2))
matpoints(x, y, pch = 16, col = rgb(0, 0, 1, 0.25))
# True curve
matlines(x.s, f(x.s), col = "red")
legend("bottomleft",
legend = c(
TeX(sprintf("Pearson $R = %2.1f$", r)),
TeX(sprintf("Spearman $\\rho = %2.1f$", r))))
for (i.g in dev.list()) dev.off(i.g)
